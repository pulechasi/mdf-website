name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath
        coverage: none

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-dev --optimize-autoloader

    - name: Create environment file
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Cache configuration
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install npm dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Deploy to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: ".,!node_modules,!vendor,!/.git"
        target: "/home/mdf/public_html"
        strip_components: 1

    - name: Run deployment commands on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /home/mdf/public_html

          # Install production dependencies (in case scp missed vendor)
          composer install --no-dev --optimize-autoloader --no-interaction

          # Run migrations
          php artisan migrate --force

          # Cache configuration
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          # Set permissions
          sudo chown -R mdf:www-data /home/mdf/public_html
          sudo chmod -R 755 storage
          sudo chmod -R 755 bootstrap/cache

          # Reload PHP-FPM (adjust version as needed)
          sudo systemctl reload php8.2-fpm

          echo "Deployment completed successfully!"
