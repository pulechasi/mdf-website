name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test Server Connectivity
        run: |
          echo "Testing connectivity to server..."
          ping -c 3 ${{ secrets.SERVER_HOST }} || echo "Ping failed, but continuing..."

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          timeout: 60s
          command_timeout: 10m
          script: |
            echo "🚀 Starting deployment on $(date)"
            echo "Current directory: $(pwd)"
            echo "Current user: $(whoami)"
            
            # Navigate to project directory
            cd /home/mdf/public_html || { echo "❌ Failed to navigate to /home/mdf/public_html"; exit 1; }
            
            echo "📂 Current directory: $(pwd)"
            echo "📋 Directory contents:"
            ls -la

            # Enable maintenance mode
            echo "🔧 Enabling maintenance mode..."
            php artisan down || true

            # Pull latest changes
            echo "📥 Pulling latest changes from git..."
            git pull origin main || { echo "❌ Git pull failed"; exit 1; }

            # Install/Update dependencies
            echo "📦 Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction || { echo "❌ Composer install failed"; exit 1; }

            # Run migrations
            echo "🗄️ Running database migrations..."
            php artisan migrate --force || { echo "❌ Migrations failed"; exit 1; }

            # Clear all caches first
            echo "🧹 Clearing caches..."
            php artisan cache:clear
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear

            # Then optimize
            echo "⚡ Optimizing application..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize

            # Build frontend assets
            echo "🎨 Building frontend assets..."
            npm ci --production || { echo "❌ NPM install failed"; exit 1; }
            npm run build || { echo "❌ NPM build failed"; exit 1; }

            # Restart queue workers if you use them
            echo "🔄 Restarting queue workers..."
            php artisan queue:restart

            # Set permissions
            echo "🔐 Setting permissions..."
            chmod -R 775 storage bootstrap/cache
            chown -R www-data:www-data storage bootstrap/cache

            # Disable maintenance mode
            echo "✅ Disabling maintenance mode..."
            php artisan up

            echo "🎉 Deployment completed successfully on $(date)"
